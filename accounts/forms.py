from django import formsfrom django.contrib.auth.forms import UserCreationFormfrom django.contrib.auth.models import User, Groupclass SignUpForm(UserCreationForm):    email = forms.EmailField(label="Email")    first_name = forms.CharField(label="Имя")    last_name = forms.CharField(label="Фамилия")    class Meta:        model = User        fields = (            "username",            "first_name",            "last_name",            "email",            "password1",            "password2",        )class MyUserProfile(forms.ModelForm):    author = forms.BooleanField(required=False)    username=forms.CharField(max_length=120)    first_name=forms.CharField(max_length=100)    last_name = forms.CharField(max_length=100)    def __init__(self, *args, **kwargs):        #print(kwargs)        user_from_instance = kwargs.pop('instance')        #print(user_from_instance)        #print(type(user_from_instance))        # author = user.groups.filter(name='authors').exists()        initial_arguments = kwargs.get('initial', None)        updated_initail = {}        user = None        if initial_arguments:            user = initial_arguments.get('user', None)        if not user:            user = user_from_instance        updated_initail['username'] = getattr(user, 'username', None)        updated_initail['first_name'] = getattr(user, 'first_name', None)        updated_initail['last_name'] = getattr(user, 'first_name', None)        updated_initail['author'] = user.groups.filter(name='authors').exists()        #print('updated_initail')        #print(updated_initail)        # в конце обновим kwargs        kwargs.update(initial=updated_initail)        kwargs['instance']=user_from_instance        #print(f'kwargs {kwargs}')        # отправляем все это в форму        super(MyUserProfile, self).__init__(*args, **kwargs)    class Meta:        model = User        fields = [            'username',            'first_name',            'last_name',            'author',        ]        labels = {'username': ('Логин'),                  'first_name': ('Имя'),                  'last_name': ('Фамилия'),                  'author': ('Автор')                  }        help_texts = {'first_name': ('Укажите ваше имя'),                      'last_name': ('Ваша фамилия'),                      }    def save(self, commit=True):        print(f'save in UserProfile')        user = self.instance        print(f'user={user}')        print(f'typr(user)={type(user)}')        authors = Group.objects.get(name="authors")        data = self.cleaned_data        checked = data['author']        # checked = self.author        print(f'checked={checked}')        if checked:            print(f'author = {checked}')            user.groups.add(authors)        else:            authors.user_set.remove(user)        super().save(commit=commit)        return user# Кастомизируем форму регистрации SignupForm, которую предоставляет пакет allauth.from allauth.account.forms import SignupFormfrom django.contrib.auth.models import Groupclass CustomSignupForm(SignupForm):    def save(self, request):        user = super().save(request)        common_users = Group.objects.get(name="common users")        user.groups.add(common_users)        # print(f'added user {user}')        return user